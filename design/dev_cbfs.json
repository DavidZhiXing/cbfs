{
    "spatialInfos": [],
    "viewInfos": [
        {
            "map": "function (doc, meta) {\n  if (doc.type === \"file\") {\n    emit([doc.oid, \"file\", meta.id], null);\n  } else if (doc.type === \"blob\") {\n    for (var node in doc.nodes) {\n      emit([doc.oid, \"blob\", node], null);\n    }\n  }\n}",
            "name": "blobusage",
            "reduce": "_count",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Fblobusage",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Fblobusage"
        },
        {
            "map": "function (doc, meta) {\n  if (doc.type === \"file\") {\n    emit([doc.oid, \"file\", meta.id], null);\n  } else if (doc.type === \"blob\") {\n    for (var node in doc.nodes) {\n      emit([doc.oid, \"blob\", node], null);\n    }\n  }\n}",
            "name": "file_blobs",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Ffile_blobs",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Ffile_blobs"
        },
        {
            "map": "function (doc, meta) {\n  if (doc.type === \"blob\") {\n    for (var n in doc.nodes) {\n      emit(n, null);\n    }\n  }\n}",
            "name": "node_blobs",
            "reduce": "_count",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Fnode_blobs",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Fnode_blobs"
        },
        {
            "map": "function (doc, meta) {\n  if (doc.type === \"node\") {\n    emit(meta.id.substring(1), 0);\n  } else if (doc.type === \"blob\") {\n    for (var n in doc.nodes) {\n      emit(n, doc.length);\n    }\n  }\n}",
            "name": "node_size",
            "reduce": "_sum",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Fnode_size",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Fnode_size"
        },
        {
            "map": "function (doc, meta) {\n  if (doc.type === \"node\") {\n    emit(doc.time, null);\n  }\n}",
            "name": "nodes",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Fnodes",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Fnodes"
        },
        {
            "map": "function (doc, meta) {\n  if (doc.type === \"blob\") {\n    var nreps = 0;\n    for (var x in doc.nodes) {\n      nreps++;\n    }\n    emit(nreps, null);\n  }\n}",
            "name": "repcounts",
            "reduce": "_count",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Frepcounts",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Frepcounts"
        },
        {
            "map": "function (doc, meta) {\n  if (doc.type === 'file') {\n    emit(meta.id, doc.length);\n  }\n}",
            "name": "size",
            "reduce": "_sum",
            "removeLink": "#removeView=cbfs%2F_design%252Fcbfs%2F_view%2Fsize",
            "viewLink": "#showView=cbfs%2F_design%252Fcbfs%2F_view%2Fsize"
        }
    ],
    "views": {
        "file_blobs": {
            "map": "function (doc, meta) {\n  if (doc.type === \"file\") {\n    var toEmit = {};\n    toEmit[doc.oid] = meta.id;\n    if (doc.older) {\n      for (var i = 0; i < doc.older.length; i++) {\n        toEmit[doc.older[i].oid] = meta.id;\n      }\n    }\n    for (var k in toEmit) {\n      emit([k, \"file\", meta.id], null);\n    }\n  } else if (doc.type === \"blob\") {\n    for (var node in doc.nodes) {\n      emit([doc.oid, \"blob\", node], null);\n    }\n  }\n}"
        },
        "node_blobs": {
            "map": "function (doc, meta) {\n  if (doc.type === \"blob\") {\n    for (var n in doc.nodes) {\n      emit(n, null);\n    }\n  }\n}",
            "reduce": "_count"
        },
        "node_size": {
            "map": "function (doc, meta) {\n  if (doc.type === \"node\") {\n    emit(meta.id.substring(1), 0);\n  } else if (doc.type === \"blob\") {\n    for (var n in doc.nodes) {\n      emit(n, doc.length);\n    }\n  }\n}",
            "reduce": "_sum"
        },
        "repcounts": {
            "map": "function (doc, meta) {\n  if (doc.type === \"blob\") {\n    var nreps = 0;\n    for (var x in doc.nodes) {\n      nreps++;\n    }\n    emit(nreps, null);\n  }\n}",
            "reduce": "_count"
        },
        "file_browse": {
            "map": "function (doc, meta) {\n  if(doc.type == \"file\") {  \n    var idarr = meta.id.split(\"/\");\n    emit(idarr,1);\n  }\n}",
            "reduce": "_count"
        }
    }
}
